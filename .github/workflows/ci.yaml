name: CI

on:
  workflow_dispatch:
  push:
    tags:
    - "v*.*.*"
    branches:
    - main
  pull_request:
    types:
    - opened
    - reopened

env:
  REGISTRY_IMAGE: ghcr.io/${{ github.repository }}

jobs:
  build:
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, '[ci-skip]')"
    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Prepare
      id: prep
      run: |
        VERSION=dev
        if [[ $GITHUB_REF == refs/tags/v* ]]; then
          VERSION=${GITHUB_REF#refs/tags/}
        fi
        # v1.0.0
        TAGS="${REGISTRY_IMAGE}:${VERSION}"
        # v1.0.0,v1
        TAGS="${TAGS},${REGISTRY_IMAGE}:${VERSION%%.*}"
        if [[ $VERSION =~ ^v[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}$ ]]; then
          # :v1.0.0,:v1,:latest
          TAGS="${TAGS},${REGISTRY_IMAGE}:latest"
        fi
        echo "tags=${TAGS}" >> $GITHUB_OUTPUT

        if [ "${{github.event_name}}" == "pull_request" ]; then
          echo 'push=false' >> $GITHUB_OUTPUT
          echo "cache_from=\"type=registry,ref=${REGISTRY_IMAGE}:buildcache\"" >> $GITHUB_OUTPUT
          echo 'cache_to=""' >> $GITHUB_OUTPUT
        else
          echo 'push=true' >> $GITHUB_OUTPUT
          echo "cache_from=\"type=registry,ref=${REGISTRY_IMAGE}:buildcache\"" >> $GITHUB_OUTPUT
          echo "cache_to=\"type=registry,ref=${REGISTRY_IMAGE}:buildcache,mode=max\"" >> $GITHUB_OUTPUT
        fi
        echo "github_server_url=\"${GITHUB_SERVER_URL}\"" >> $GITHUB_OUTPUT

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v2
      with:
        platforms: all

    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v2
      with:
        install: true
        version: latest
        driver-opts: image=moby/buildkit:master

    - name: Login to GitHub Container Registry
      if: github.event_name != 'pull_request'
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ secrets.GHCR_USERNAME }}
        password: ${{ secrets.GHCR_TOKEN }}

    - name: Build and Push
      id: docker_build
      uses: docker/build-push-action@v3
      with:
        builder: ${{ steps.buildx.outputs.name }}
        context: .
        file: ./Dockerfile
        platforms: linux/amd64,linux/arm64
        push: ${{ steps.prep.outputs.push }}
        tags: ${{ steps.prep.outputs.tags }}
        build-args: |
          IMAGE_SOURCE=${{ steps.prep.outputs.github_server_url }}/${{ github.repository }}
        cache-from: ${{ steps.prep.outputs.cache_from }}
        cache-to: ${{ steps.prep.outputs.cache_to }}

    - name: Image digest
      run: echo ${{ steps.docker_build.outputs.digest }}
